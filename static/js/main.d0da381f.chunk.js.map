{"version":3,"sources":["components/BlogPostForm/BlogPostForm.js","components/BlogApp/BlogEntry.js","components/BlogApp/BlogDisplay.js","components/BlogApp/BlogForm.js","components/BlogApp/BlogApp.js","components/BlogReader/Article1.js","components/BlogReader/Article2.js","components/BlogReader/Article3.js","components/BlogReader/Article4.js","components/BlogReader/SideBar.js","components/BlogReader/BlogReader.js","components/BookmarkingApp/BookMark.js","components/BookmarkingApp/BookmarkForm.js","components/BookmarkingApp/BookmarkNavButton.js","components/BookmarkingApp/BookmarkNav.js","components/BookmarkingApp/BookmarkList.js","components/BookmarkingApp/BookmarkingApp.js","components/ContactForm/ContactCard.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["BlogPostForm","props","useState","posts","setPosts","title","setTitle","body","setBody","useEffect","localStorage","setItem","JSON","stringify","onSubmit","event","preventDefault","newBlog","updatePosts","name","type","id","value","onChange","target","autoComplete","placeholder","BlogEntry","newTitle","setNewTitle","newBody","setNewBody","isEditing","setIsEditing","editHTML","editEntry","previewHTML","onClick","deleteEntry","BlogDisplay","blogEntriesHTML","blogEntries","map","blogEntry","BlogForm","addBlogEntry","counter","BlogApp","setBlogEntries","setCounter","newBlogEntry","index","findIndex","remainingEntries","splice","updatedEntries","Article1","Article2","Article3","Article4","SideBar","setSelection","BlogReader","html","selection","BookMark","href","URL","BookmarkForm","setURL","tag","setTag","newBookmark","updateBookmarks","bookmarks","setBookmarks","storeBookmarks","BookmarkNavButton","key","BookmarkNav","tags","navButtonHTML","Set","BookmarkList","bookmarkHTML","shownBookmarks","bookmark","i","length","push","shownBookmark","BookmarkingApp","ContactCard","firstName","lastName","address","phoneNumber","ContactForm","setFirstName","setLastName","setAddress","setPhoneNumber","contacts","setContacts","contactsHTML","contact","newContact","updateContacts","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0da381f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction BlogPostForm(props){\n\n  const [posts, setPosts] = useState([{}]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  \n  function handleSubmit(event){\n    event.preventDefault();\n    const newBlog = {title, body};\n    const updatePosts = [...posts, newBlog];\n    setPosts(updatePosts);\n    // const storePosts = JSON.stringify(posts);\n    // localStorage.setItem(\"blogposts\", storePosts);\n    //Console test lines to see if written to storage:   \n    // const test = localStorage.getItem(\"blogposts\");\n    // console.log(test)\n  }\n\n  function handleTitleChange(event){\n    setTitle(event.target.value);\n  }\n\n  function handleBodyChange(event){\n    setBody(event.target.value);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('blogPosts', JSON.stringify(posts));\n  },[posts]);\n\n  return(\n    <form onSubmit={handleSubmit}>\n          <h2>Enter your Blog Stuff below:</h2>\n          <input name=\"title\" type=\"text\" id=\"title\" value={title} onChange={handleTitleChange} autoComplete=\"off\" placeholder=\"Title\"/>\n          <input name=\"body\" type=\"text\" id=\"body\" value={body} onChange={handleBodyChange} autoComplete=\"off\" placeholder=\"Body\"/>\n          <button type=\"submit\">Submit Post</button>\n    </form>\n  )\n}\n\nexport default BlogPostForm;\n\n","import {useState} from 'react';\n\nfunction BlogEntry(props){\n    const [newTitle, setNewTitle] = useState(props.title);\n    const [newBody, setNewBody] = useState(props.body);\n    const [isEditing, setIsEditing] = useState(false);\n\n    function handleTitleChange(event){\n        setNewTitle(event.target.value);\n      }\n    \n      function handleBodyChange(event){\n        setNewBody(event.target.value);\n      }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        props.editEntry(props.id, newTitle, newBody);\n        setNewTitle(newTitle);\n        setNewBody(newBody);\n        setIsEditing(false);\n    }\n\n    const editHTML = (\n        <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"newTitle\" value={newTitle} onChange={handleTitleChange} />\n                <input type=\"text\" name=\"newBody\" value={newBody} onChange={handleBodyChange} />\n                <button type=\"submit\">Update</button>\n        </form>\n    );\n\n    const previewHTML = (\n            <div id={props.id}>\n                <h2>{props.title}</h2>\n                <p> {props.body}</p> <br />\n                <button type=\"button\" onClick={() => setIsEditing(true)} >Edit</button>\n                <button type=\"button\" onClick={() => props.deleteEntry(props.id)}> Delete </button>\n            </div>\n    )\n\n    return(\n\n        <div> {isEditing ? editHTML: previewHTML}</div>\n    )\n}\nexport default BlogEntry;\n\n","import BlogEntry from \"./BlogEntry\";\n\nfunction BlogDisplay(props) {\n\n    const blogEntriesHTML = props.blogEntries.map(blogEntry => <BlogEntry key={props.blogEntries.id} {...blogEntry} deleteEntry={props.deleteEntry} editEntry={props.editEntry}/>);\n   \n\n\n    return(\n        <>\n            {blogEntriesHTML}\n        </>\n    )\n}\n\nexport default BlogDisplay;","import {useState, useEffect} from 'react';\n\nfunction BlogForm(props) {\n    \n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n\n    function handleSubmit(event){\n        event.preventDefault();\n        // const newBlogEntry = {title, body};\n        props.addBlogEntry(props.counter, title, body);\n        setTitle('');\n        setBody('');\n    }\n\n      function handleTitleChange(event){\n        setTitle(event.target.value);\n      }\n    \n      function handleBodyChange(event){\n        setBody(event.target.value);\n      }\n    \n    //   useEffect(() => {\n    //     localStorage.setItem('blogPosts', JSON.stringify(posts));\n    //   },[posts]);\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <h2>Enter your Blog Stuff below:</h2>\n            <input name=\"title\" type=\"text\" id=\"title\" value={title} onChange={handleTitleChange} autoComplete=\"off\" placeholder=\"Title\"/>\n            <input name=\"body\" type=\"text\" id=\"body\" value={body} onChange={handleBodyChange} autoComplete=\"off\" placeholder=\"Body\"/>\n            <button type=\"submit\">Submit Post</button>\n        </form>\n    )\n}\n\nexport default BlogForm;\n","import { useState, useEffect } from 'react';\n\nimport BlogDisplay from \"./BlogDisplay\";\nimport BlogForm from \"./BlogForm\";\n\nfunction BlogApp(props){\n  const [blogEntries, setBlogEntries] = useState([]);\n  const [counter, setCounter] = useState(4);\n\n  useEffect(() => {\n    setBlogEntries([\n      {\n        id: 1,\n        title: \"Dealing with grief\",\n        body: \"There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies. (C.A.R. Hoare) Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter. (Eric Raymond) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) True innovation often comes from the small startup who is lean enough to launch a market but lacks the heft to own it. (Timm Martin) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) It’s not a bug – it’s an undocumented feature. (Anonymous) The best thing about a boolean is even if you are wrong, you are only off by a bit. (Anonymous) The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time. (Tom Cargill) Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges, and it causes end-user and administrator frustration. (Ray Ozzie) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. (Martin Golding) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) Computer language design is just like a stroll in the park. Jurassic Park, that is. (Larry Wall) That’s what’s cool about working with computers. They don’t argue, they remember everything, and they don’t drink all your beer. (Paul Leary) Without requirements or design, programming is the art of adding bugs to an empty text file. (Louis Srygley)\"\n      }, {\n        id: 2,\n        title: \"Sleep, I needs it\",\n        body: \"There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies. (C.A.R. Hoare) Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter. (Eric Raymond) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) True innovation often comes from the small startup who is lean enough to launch a market but lacks the heft to own it. (Timm Martin) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) It’s not a bug – it’s an undocumented feature. (Anonymous) The best thing about a boolean is even if you are wrong, you are only off by a bit. (Anonymous) The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time. (Tom Cargill) Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges, and it causes end-user and administrator frustration. (Ray Ozzie) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. (Martin Golding) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) Computer language design is just like a stroll in the park. Jurassic Park, that is. (Larry Wall) That’s what’s cool about working with computers. They don’t argue, they remember everything, and they don’t drink all your beer. (Paul Leary) Without requirements or design, programming is the art of adding bugs to an empty text file. (Louis Srygley)\"\n      }, {\n        id: 3,\n        title: \"Am I doing it right?\",\n        body: \"There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies. (C.A.R. Hoare) Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter. (Eric Raymond) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) True innovation often comes from the small startup who is lean enough to launch a market but lacks the heft to own it. (Timm Martin) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) It’s not a bug – it’s an undocumented feature. (Anonymous) The best thing about a boolean is even if you are wrong, you are only off by a bit. (Anonymous) The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time. (Tom Cargill) Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges, and it causes end-user and administrator frustration. (Ray Ozzie) I think Microsoft named .Net so it wouldn’t show up in a Unix directory listing. (Oktal) Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. (Martin Golding) Good programmers use their brains, but good guidelines save us having to think out every case. (Francis Glassborow) Computer language design is just like a stroll in the park. Jurassic Park, that is. (Larry Wall) That’s what’s cool about working with computers. They don’t argue, they remember everything, and they don’t drink all your beer. (Paul Leary) Without requirements or design, programming is the art of adding bugs to an empty text file. (Louis Srygley)\"\n      },\n    ])\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('blogEntries', JSON.stringify(blogEntries));\n  },[blogEntries]);\n\n\n  function addBlogEntry(id, title, body) {\n    const newBlogEntry = { id: counter, title, body};\n    setBlogEntries([...blogEntries, newBlogEntry]);\n    setCounter(counter + 1);\n  }\n\n  function deleteEntry(id){\n    const index=blogEntries.findIndex(blogEntry => blogEntry.id === id);\n    const remainingEntries = [...blogEntries];\n    remainingEntries.splice(index, 1);\n    setBlogEntries(remainingEntries);\n  }\n  \n  function editEntry(id, newTitle, newBody){\n    const index = blogEntries.findIndex(blogEntry => blogEntry.id === id);\n    const updatedEntries = [...blogEntries];\n    updatedEntries[index].title = newTitle;\n    updatedEntries[index].body = newBody;\n    setBlogEntries(updatedEntries);\n  }\n  \n\n  return(\n    <>\n      <h1>Blog CMS!</h1>\n      <BlogForm addBlogEntry={addBlogEntry}/>\n      <BlogDisplay blogEntries={blogEntries} deleteEntry={deleteEntry} editEntry={editEntry}/>\n    </>\n  )\n}\n\nexport default BlogApp;\n\n\n\n\n\n\n\n\n\n\n \n","function Article1(props){\n    return(\n        <>\n            <h1>Article 1</h1>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?</p>\n        </>\n    )\n}\n\nexport default Article1;","function Article2(props){\n    return(\n        <>\n            <h1>Article 2</h1>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?</p>\n        </>\n    )\n}\n\nexport default Article2;","function Article3(props){\n    return(\n        <>\n            <h1>Article 3</h1>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?</p>\n        </>\n    )\n}\n\nexport default Article3;","function Article4(props){\n    return(\n        <>\n            <h1>Article 4</h1>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, optio \n                voluptatem minima dignissimos labore excepturi in nihil culpa laboriosam \n                at fuga minus, nostrum itaque possimus dicta consequatur ullam accusamus \n                delectus?</p>\n        </>\n    )\n}\n\nexport default Article4;","function SideBar(props){\n    return (\n        <>\n         <button type=\"button\" onClick={() => props.setSelection('article1')}> Article 1</button>\n        <button type=\"button\" onClick={() => props.setSelection('article2')}> Article 2</button>\n        <button type=\"button\" onClick={() => props.setSelection('article3')}> Article 3</button>\n        <button type=\"button\" onClick={() => props.setSelection('article4')}> Article 4</button>\n        </>\n    )\n}\n\nexport default SideBar;\n\n//Change \"Article 1, Article 2, etc\" to get the information dynamically","/*\n\nblog-reading app\n    reqs: list out blog posts on the right(titles).  When one is clicked on, that \n    post loads in the rest of the screen.  Can hard-code static data. No need to \n    use local storage\n\n  \n\n- c) Create a \"blog reading app\", where you have a list of blog posts (static data)\n  on the side and when you click on a post title, it opens that post on the right.\n  Hint: which blog post is selected is \"application state\".\n\n \n\n- \n*/\nimport {useState} from 'react';\nimport Article1 from './Article1';\nimport Article2 from './Article2';\nimport Article3 from './Article3';\nimport Article4 from './Article4';\nimport SideBar from './SideBar';\n\nfunction BlogReader(props){\n  const [selection, setSelection] = useState('article1');\n\n  let html;\n  if (selection === 'article1') {\n    html = <Article1 />\n  } else if (selection === 'article2') {\n    html = <Article2 />\n  } else if (selection === 'article3') {\n    html = <Article3 />\n  } else if (selection === 'article4') {\n    html = <Article4 />\n  }  \n  \n\n  return(\n    <>\n      <SideBar setSelection={setSelection} />\n      {html}\n    </>\n  )\n}\n\nexport default BlogReader;\n","function BookMark(props){\n    return(\n        <div>\n            <a href={props.URL}>{props.title}</a><br />\n            {/* <p>{props.tag}<br /></p> */}\n        </div>\n    )\n}\n\nexport default BookMark;","import BookMark from \"./BookMark\";\nimport {useState} from 'react';\n\nfunction BookmarkForm(props){\n\n   const [URL, setURL] = useState('');\n   const [title, setTitle] = useState('');\n   const [tag, setTag] = useState('');\n   \n   function handleURLChange(event){\n      setURL(event.target.value);\n    }\n  \n    function handleTitleChange(event){\n      setTitle(event.target.value);\n    }\n\n    function handleTagChange(event){\n      setTag(event.target.value);\n    }\n  \n    function handleSubmit(event){\n      event.preventDefault();\n      const newBookmark = {URL, title, tag};\n      const updateBookmarks = [...props.bookmarks, newBookmark];\n      props.setBookmarks(updateBookmarks);\n      const storeBookmarks = JSON.stringify(props.bookmarks);\n      localStorage.setItem(\"bookmarks\", storeBookmarks);\n      //Console test lines to see if written to storage:   \n      // const test3 = localStorage.getItem(\"bookmarks\");\n      // console.log(test3)\n    }\n\n   return(\n     <>\n     <form onSubmit={handleSubmit}>\n          <input name=\"URL\" type=\"text\" id=\"URL\" value={URL} onChange={handleURLChange} autoComplete=\"off\" placeholder=\"Link URL:\"/>\n          <input name=\"title\" type=\"text\" id=\"title\" value={title} onChange={handleTitleChange} autoComplete=\"off\" placeholder=\"Title\"/>\n          <input name=\"tag\" type=\"text\" id=\"tag\" value={tag} onChange={handleTagChange} autoComplete=\"off\" placeholder=\"Bookmark Tag\"/>\n          <button type=\"submit\">Add Bookmark</button>\n    </form>\n   \n     </>\n   )\n }\n \n export default BookmarkForm;\n","import {useState} from 'react';\n\nfunction BookmarkNavButton(props){\n    function handleClick(event){\n        if (props.selection === props.value){\n            props.setSelection('all');\n        } else {\n            props.setSelection(props.value);\n        }\n    }\n    \n    return (\n        <>\n            <button type=\"button\" key={props.key} onClick={handleClick}>{props.value} </button>\n        </>\n    )\n}\n\nexport default BookmarkNavButton;\n\n//Create an onClick function to pass up the chain.\n//() => props.setSelection(props.value)","import {useState} from 'react';\nimport BookmarkNavButton from './BookmarkNavButton';\n\nfunction BookmarkNav(props){\n    const tags = props.bookmarks.map(tag => tag.tag);\n    // const tagsArray = [...props.bookmarks.tag];\n    const uniqueTags = [...new Set(tags)];\n    const navButtonHTML =uniqueTags.map(tag => <BookmarkNavButton key={tag} \n        value={tag} setSelection={props.setSelection} selection={props.selection}/>);\n    \n    return(\n        <>\n            {navButtonHTML}\n            {/* <h1>{uniqueTags.length}</h1>\n            <h1>{props.selection}</h1> */}\n        </>\n    )\n}\n\nexport default BookmarkNav;\n\n//Find every unique tag\n//List them out...\n//Selecting them .filters the bookmarks\n\n\n","import BookMark from \"./BookMark\";\n\nfunction BookmarkList(props){\n    let bookmarkHTML;\n    let shownBookmarks=[{}];\n    if (props.selection === \"all\"){\n        bookmarkHTML = props.bookmarks.map(bookmark => <BookMark key={URL} {...bookmark}/>);\n    } \n    else {\n        // shownBookmarks = props.bookmarks.filter(() => props.selection === props.bookmarks.tag);\n        for (let i=0; i < props.bookmarks.length; i++){\n            if (props.bookmarks[i].tag === props.selection){\n                shownBookmarks.push(props.bookmarks[i]);\n            }\n        }\n        bookmarkHTML = shownBookmarks.map(shownBookmark => <BookMark key={URL} {...shownBookmark}/>);\n    }\n    return (\n        <>\n         {bookmarkHTML}\n        </>\n    )\n\n}\nexport default BookmarkList;","/*\n\nbookmarking app\n    reqs: save URLS.  Form with URL, title, and tag.  List of all URLS. At top\n    of list, a nav based on tags.  When you click on tag, it will filter urls\n    by that tag.\n    tags: all, humor, by language?\n\n   \n  \n- d) Create a bookmarking app where you can save URLs to localStorage. It should\n  have a form where you enter the URL, a title, and a \"tag\". There should be a list\n  of all the URLs, as well as a list of all the tags (this should be generated\n  dynamically). When you click on a tag, the link list should show only those tags.\n  Hint: which tag is selected is \"application state\".\n\n*/\n\nimport {useState} from 'react';\nimport { useEffect } from 'react';\nimport BookmarkForm from './BookmarkForm';\nimport BookmarkNav from './BookmarkNav';\nimport BookmarkList from './BookmarkList';\n\nfunction BookmarkingApp(props){\n  const [selection, setSelection] = useState('all');\n  const [bookmarks, setBookmarks] = useState([{}]);\n\n  useEffect(() => {\n    setBookmarks([\n      {\n        URL: \"www.funny.com\",\n        title: \"Funny page\",\n        tag: \"funny\",\n      }, {\n        URL: \"www.info.com\",\n        title: \"Informative page\",\n        tag: \"news\",\n      }, {\n        URL: \"www.evenfunnier.com\",\n        title: \"More Funny page\",\n        tag: \"funny\",\n      },\n    ])\n  }, []);\n\n  return(\n    <>\n    <BookmarkForm bookmarks={bookmarks} setBookmarks={setBookmarks}/>\n    <BookmarkNav bookmarks={bookmarks} selection={selection} setSelection={setSelection}/>\n    <BookmarkList bookmarks={bookmarks} selection={selection} />\n    </>\n  )\n}\n\nexport default BookmarkingApp;","function ContactCard(props){\n    return(\n        <div>\n           {props.firstName} &nbsp; {props.lastName}<br/>\n           {props.address} <br/>\n           {props.phoneNumber} <br/>\n        </div>\n        \n    )\n}\n\nexport default ContactCard;\n\n","/*\n\n contact form\n    reqs: first name, last name, address, phone number, as you add contacts, have \n    them listed out  (bootstrap cards?)\n    list contacts as they are added.  Save them to local storage\n\n       Create a form that saves a contact to localStorage. Each contact\n  should have a first name, last name, address, and phone number and should \n  display in the browser once created.\n\n*/\nimport { useState, useEffect } from 'react';\nimport ContactCard from \"./ContactCard\";\n\nfunction ContactForm(props){\n\n   const [firstName, setFirstName] = useState('');\n   const [lastName, setLastName] = useState('');\n   const [address, setAddress] = useState('');\n   const [phoneNumber, setPhoneNumber] = useState('');\n   const [contacts, setContacts]= useState([]);\n\n   const contactsHTML = contacts.map(contact => <ContactCard key={contact.phoneNumber} {...contact}/>);\n\n\n   function handleFirstNameChange(event){\n      setFirstName(event.target.value);\n    }\n  \n    function handleLastNameChange(event){\n      setLastName(event.target.value);\n    }\n\n    function handleAddressChange(event){\n      setAddress(event.target.value);\n    }\n  \n    function handlePhoneNumberChange(event){\n      setPhoneNumber(event.target.value);\n    }\n\n    function handleSubmit(event){\n      event.preventDefault();\n      const newContact = {firstName, lastName, address, phoneNumber};\n      const updateContacts = [...contacts, newContact];\n      setContacts(updateContacts);\n      // const storeContacts = JSON.stringify(contacts);\n      // localStorage.setItem(\"contacts\", storeContacts);\n      //Console test lines to see if written to storage:   \n      // const test2 = localStorage.getItem(\"contacts\");\n      // console.log(test2)\n    }\n\n    useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    },[contacts]);\n\n   return(\n     <>\n     <form onSubmit={handleSubmit}>\n          <input name=\"firstName\" type=\"text\" id=\"firstName\" value={firstName} onChange={handleFirstNameChange} autoComplete=\"off\" placeholder=\"First Name\"/>\n          <input name=\"lastName\" type=\"text\" id=\"lastName\" value={lastName} onChange={handleLastNameChange} autoComplete=\"off\" placeholder=\"Last Name\"/>\n          <input name=\"address\" type=\"text\" id=\"address\" value={address} onChange={handleAddressChange} autoComplete=\"off\" placeholder=\"123 Placeholder St\"/>\n          <input name=\"phoneNumber\" type=\"text\" id=\"phoneNumber\" value={phoneNumber} onChange={handlePhoneNumberChange} autoComplete=\"off\" placeholder=\"(123)456-7890\"/>\n          <button type=\"submit\">Add Contact</button>\n    </form>\n    {contactsHTML}\n     </>\n   )\n }\n \n export default ContactForm;\n","import {useState} from 'react';\nimport './App.css'\n\nimport BlogPostForm from './components/BlogPostForm/BlogPostForm';\nimport BlogApp from './components/BlogApp/BlogApp';\nimport BlogReader from './components/BlogReader/BlogReader';\nimport BookmarkingApp from './components/BookmarkingApp/BookmarkingApp';\nimport ContactForm from './components/ContactForm/ContactForm';\n\n\n\nfunction App() {\n  const [selection, setSelection] = useState('blogForm');\n\n  let html;\n  if (selection === 'blogForm') {\n    html = <BlogPostForm />\n  } else if (selection === 'blogApp') {\n    html = <BlogApp />\n  } else if (selection === 'blogReader') {\n    html = <BlogReader />\n  } else if (selection === 'bookmark') {\n    html = <BookmarkingApp />\n  } else if (selection === 'contactForm') {\n    html = <ContactForm />\n  } \n\n\n  return (\n\n    <div className=\"App\">\n      <header> \n        <button type=\"button\" onClick={() => setSelection('blogForm')}> Blog Form</button>\n        <button type=\"button\" onClick={() => setSelection('contactForm')}> Contact Form</button>\n        <button type=\"button\" onClick={() => setSelection('blogReader')}> Blog Reader</button>\n        <button type=\"button\" onClick={() => setSelection('bookmark')}> Bookmarking App</button>\n        <button type=\"button\" onClick={() => setSelection('blogApp')}> Blog App</button>\n      </header>\n      \n      {html}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}